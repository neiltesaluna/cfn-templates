AWSTemplateFormatVersion: "2010-09-09"
Description: "This stack is to generate an EC2 instance where it's accessible using SSM"
Parameters:
  AvailabilityZone:
    Type: String
    Default: ap-southeast-2a

Resources:
# Creating own VPC, subnets and internet gateway for this stack
  ec2CfnInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachVpctoGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !GetAtt ec2CfnVPC.VpcId
      InternetGatewayId: !GetAtt ec2CfnInternetGateway.InternetGatewayId

  ec2CfnVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'

  ec2CfnPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:  !Ref ec2CfnVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Select [ 0, Fn::GetAZs: !Ref 'AWS::Region']
  
  ec2CfnPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:  !Ref ec2CfnVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: 'true'
      AvailabilityZone: !Select [ 1, Fn::GetAZs: !Ref 'AWS::Region']

  # Some route tables for our subnets:
  # Public Subnet 1
  ec2PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ec2CfnVPC

  ec2PublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: AttachVpctoGateway
    Properties:
      RouteTableId: !Ref ec2PublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ec2CfnInternetGateway

  ec2RouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ec2CfnPublicSubnet1
      RouteTableId: !Ref ec2PublicRouteTable1

  # Public Subnet 2
  ec2PublicRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ec2CfnVPC

  ec2PublicRoute2:
    Type: AWS::EC2::Route
    DependsOn: AttachVpctoGateway
    Properties:
      RouteTableId: !Ref ec2PublicRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ec2CfnInternetGateway

  ec2RouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ec2CfnPublicSubnet2
      RouteTableId: !Ref ec2PublicRouteTable2

Outputs:
  ec2CfnPublicSubnet1Id:
    Value: !GetAtt ec2CfnPublicSubnet1.SubnetId
  ec2CfnPublicSubnet2Id:
    Value: !GetAtt ec2CfnPublicSubnet2.SubnetId
  ec2CfnVpcId:
    Value: !GetAtt ec2CfnVPC.VpcId